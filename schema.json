{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"version": "1.3.0",
	"type": "object",
	"description": "Homebrew for 5etools. Should include arrays titled similarly to the main site data, e.g. `spell` or `class`",
	"definitions": {
		"entry": {
			"$id": "/Entry",
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/entry.json"
		},
		"damImmune": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/entry.json#/definitions/dataDamImmune"
		},
		"bookSource": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"source": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"source"
			]
		},
		"level1to9": {
			"type": "object",
			"properties": {
				"lower": {
					"type": "number"
				},
				"slots": {
					"type": "number"
				},
				"spells": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"spells"
			],
			"additionalProperties": false
		},
		"arrayOfString": {
			"type": "array",
			"uniqueItems": true,
			"items": {
				"type": "string"
			}
		},
		"frequency": {
			"type": "object",
			"properties": {
				"9e": {
					"$ref": "#/definitions/arrayOfString"
				},
				"9": {
					"$ref": "#/definitions/arrayOfString"
				},
				"8e": {
					"$ref": "#/definitions/arrayOfString"
				},
				"8": {
					"$ref": "#/definitions/arrayOfString"
				},
				"7e": {
					"$ref": "#/definitions/arrayOfString"
				},
				"7": {
					"$ref": "#/definitions/arrayOfString"
				},
				"6e": {
					"$ref": "#/definitions/arrayOfString"
				},
				"6": {
					"$ref": "#/definitions/arrayOfString"
				},
				"5e": {
					"$ref": "#/definitions/arrayOfString"
				},
				"5": {
					"$ref": "#/definitions/arrayOfString"
				},
				"4e": {
					"$ref": "#/definitions/arrayOfString"
				},
				"4": {
					"$ref": "#/definitions/arrayOfString"
				},
				"3e": {
					"$ref": "#/definitions/arrayOfString"
				},
				"3": {
					"$ref": "#/definitions/arrayOfString"
				},
				"2e": {
					"$ref": "#/definitions/arrayOfString"
				},
				"2": {
					"$ref": "#/definitions/arrayOfString"
				},
				"1e": {
					"$ref": "#/definitions/arrayOfString"
				},
				"1": {
					"$ref": "#/definitions/arrayOfString"
				}
			},
			"additionalProperties": false
		},
		"speedVal": {
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"number": {
							"type": "integer"
						},
						"condition": {
							"type": "string"
						}
					},
					"required": [
						"number",
						"condition"
					],
					"additionalProperties": false
				},
				{
					"type": "integer"
				}
			]
		},
		"damResist": {
			"oneOf": [
				{
					"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/entry.json#/definitions/dataDmgType"
				},
				{
					"type": "object",
					"properties": {
						"special": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"special"
					]
				},
				{
					"type": "object",
					"properties": {
						"preNote": {
							"type": "string"
						},
						"resist": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/damResist"
							}
						},
						"note": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"resist"
					]
				}
			]
		},
		"damVuln": {
			"oneOf": [
				{
					"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/entry.json#/definitions/dataDmgType"
				},
				{
					"type": "object",
					"properties": {
						"special": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"special"
					]
				},
				{
					"type": "object",
					"properties": {
						"preNote": {
							"type": "string"
						},
						"vulnerable": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/damVuln"
							}
						},
						"note": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"vulnerable"
					]
				}
			]
		},
		"align": {
			"oneOf": [
				{
					"type": "string",
					"enum": [
						"L",
						"N",
						"NX",
						"NY",
						"C",
						"G",
						"E",
						"U",
						"A"
					]
				},
				{
					"type": "object",
					"properties": {
						"alignment": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/align"
							}
						},
						"chance": {
							"type": "integer"
						}
					},
					"additionalProperties": false,
					"required": [
						"alignment"
					]
				},
				{
					"type": "object",
					"properties": {
						"special": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"special"
					]
				}
			]
		},
		"acItem": {
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"ac": {
							"type": "integer"
						},
						"from": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"condition": {
							"type": "string"
						},
						"braces": {
							"type": "boolean"
						}
					},
					"required": [
						"ac"
					]
				},
				{
					"type": "integer"
				}
			]
		},
		"creatureData": {
			"properties": {
				"name": {
					"type": "string"
				},
				"alias": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"group": {
					"description": "A group name, indexed by search. E.g. searching \"Lycanthrope\" would otherwise fail to find anything",
					"type": "string"
				},
				"size": {
					"type": "string",
					"enum": [
						"F",
						"D",
						"T",
						"S",
						"M",
						"L",
						"H",
						"G",
						"C",
						"V"
					]
				},
				"description": {
					"type": "string"
				},
				"type": {
					"anyOf": [
						{
							"type": "object",
							"properties": {
								"type": {
									"type": "string",
									"enum": [
										"aberration",
										"beast",
										"celestial",
										"construct",
										"dragon",
										"elemental",
										"fey",
										"fiend",
										"giant",
										"humanoid",
										"monstrosity",
										"ooze",
										"plant",
										"undead"
									]
								},
								"swarmSize": {
									"type": "string",
									"enum": [
										"F",
										"D",
										"T",
										"S",
										"M",
										"L",
										"H",
										"G",
										"C",
										"V"
									]
								},
								"tags": {
									"type": "array",
									"uniqueItems": true,
									"items": {
										"anyOf": [
											{
												"type": "string"
											},
											{
												"type": "object",
												"properties": {
													"tag": {
														"type": "string"
													},
													"prefix": {
														"type": "string"
													}
												},
												"required": [
													"tag",
													"prefix"
												],
												"additionalProperties": false
											}
										]
									}
								}
							},
							"required": [
								"type"
							],
							"additionalProperties": false
						},
						{
							"type": "string",
							"enum": [
								"aberration",
								"beast",
								"celestial",
								"construct",
								"dragon",
								"elemental",
								"fey",
								"fiend",
								"giant",
								"humanoid",
								"monstrosity",
								"ooze",
								"plant",
								"undead"
							]
						}
					]
				},
				"source": {
					"type": "string"
				},
				"otherSources": {
					"type": "array",
					"items": {
						"oneOf": [
							{
								"type": "object",
								"properties": {
									"source": {
										"type": "string"
									},
									"page": {
										"type": "integer"
									}
								},
								"required": [
									"source"
								],
								"additionalProperties": false
							}
						]
					}
				},
				"externalSources": {
					"description": "For homebrew use only.",
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"entry": {
								"$ref": "#/definitions/entry"
							}
						},
						"required": [
							"entry"
						],
						"additionalProperties": false
					}
				},
				"alignment": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/align"
					}
				},
				"ac": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/acItem"
					}
				},
				"hp": {
					"oneOf": [
						{
							"type": "object",
							"properties": {
								"average": {
									"type": "integer"
								},
								"formula": {
									"type": "string"
								}
							},
							"additionalProperties": false
						},
						{
							"type": "object",
							"properties": {
								"special": {
									"type": "string"
								}
							},
							"additionalProperties": false
						}
					]
				},
				"speed": {
					"type": "object",
					"properties": {
						"walk": {
							"$ref": "#/definitions/speedVal"
						},
						"burrow": {
							"$ref": "#/definitions/speedVal"
						},
						"climb": {
							"$ref": "#/definitions/speedVal"
						},
						"fly": {
							"$ref": "#/definitions/speedVal"
						},
						"canHover": {
							"type": "boolean"
						},
						"swim": {
							"$ref": "#/definitions/speedVal"
						},
						"choose": {
							"type": "object",
							"properties": {
								"from": {
									"type": "array",
									"items": {
										"type": "string",
										"enum": [
											"walk",
											"burrow",
											"climb",
											"fly",
											"swim"
										]
									}
								},
								"amount": {
									"type": "integer"
								},
								"note": {
									"type": "string"
								}
							},
							"required": [
								"amount",
								"from"
							],
							"additionalProperties": false
						},
						"alternate": {
							"type": "object",
							"properties": {
								"walk": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/speedVal"
									}
								},
								"burrow": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/speedVal"
									}
								},
								"climb": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/speedVal"
									}
								},
								"fly": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/speedVal"
									}
								},
								"swim": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/speedVal"
									}
								}
							}
						}
					},
					"additionalProperties": false
				},
				"str": {
					"type": "integer"
				},
				"dex": {
					"type": "integer"
				},
				"con": {
					"type": "integer"
				},
				"int": {
					"type": "integer"
				},
				"wis": {
					"type": "integer"
				},
				"cha": {
					"type": "integer"
				},
				"save": {
					"type": "object",
					"properties": {
						"str": {
							"type": "string"
						},
						"dex": {
							"type": "string"
						},
						"con": {
							"type": "string"
						},
						"int": {
							"type": "string"
						},
						"wis": {
							"type": "string"
						},
						"cha": {
							"type": "string"
						},
						"special": {
							"description": "For use in homebrew.",
							"$ref": "#/definitions/entry"
						}
					},
					"additionalProperties": false
				},
				"skill": {
					"type": "object",
					"properties": {
						"acrobatics": {
							"type": "string"
						},
						"animal handling": {
							"type": "string"
						},
						"arcana": {
							"type": "string"
						},
						"athletics": {
							"type": "string"
						},
						"deception": {
							"type": "string"
						},
						"history": {
							"type": "string"
						},
						"insight": {
							"type": "string"
						},
						"intimidation": {
							"type": "string"
						},
						"investigation": {
							"type": "string"
						},
						"medicine": {
							"type": "string"
						},
						"nature": {
							"type": "string"
						},
						"perception": {
							"type": "string"
						},
						"performance": {
							"type": "string"
						},
						"persuasion": {
							"type": "string"
						},
						"religion": {
							"type": "string"
						},
						"sleight of hand": {
							"type": "string"
						},
						"stealth": {
							"type": "string"
						},
						"survival": {
							"type": "string"
						},
						"other": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"oneOf": {
										"type": "object",
										"acrobatics": {
											"type": "string"
										},
										"animal handling": {
											"type": "string"
										},
										"arcana": {
											"type": "string"
										},
										"athletics": {
											"type": "string"
										},
										"deception": {
											"type": "string"
										},
										"history": {
											"type": "string"
										},
										"insight": {
											"type": "string"
										},
										"intimidation": {
											"type": "string"
										},
										"investigation": {
											"type": "string"
										},
										"medicine": {
											"type": "string"
										},
										"nature": {
											"type": "string"
										},
										"perception": {
											"type": "string"
										},
										"performance": {
											"type": "string"
										},
										"persuasion": {
											"type": "string"
										},
										"religion": {
											"type": "string"
										},
										"sleight of hand": {
											"type": "string"
										},
										"stealth": {
											"type": "string"
										},
										"survival": {
											"type": "string"
										}
									}
								}
							}
						}
					},
					"additionalProperties": false
				},
				"senses": {
					"type": "string"
				},
				"passive": {
					"type": "integer"
				},
				"languages": {
					"type": "string"
				},
				"cr": {
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "object",
							"properties": {
								"cr": {
									"type": "string"
								},
								"lair": {
									"type": "string"
								},
								"coven": {
									"type": "string"
								}
							},
							"additionalProperties": false,
							"required": [
								"cr"
							]
						}
					]
				},
				"vulnerable": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/damVuln"
					}
				},
				"resist": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/damResist"
					}
				},
				"conditionImmune": {
					"type": "array",
					"items": {
						"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/entry.json#/definitions/dataCondImmune"
					}
				},
				"immune": {
					"type": "array",
					"items": {
						"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/entry.json#/definitions/dataDamImmune"
					}
				},
				"spellcasting": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"headerEntries": {
								"type": "array",
								"items": {
									"$ref": "#/definitions/entry"
								}
							},
							"constant": {
								"$ref": "#/definitions/arrayOfString"
							},
							"will": {
								"$ref": "#/definitions/arrayOfString"
							},
							"rest": {
								"$ref": "#/definitions/frequency"
							},
							"daily": {
								"$ref": "#/definitions/frequency"
							},
							"weekly": {
								"$ref": "#/definitions/frequency"
							},
							"spells": {
								"type": "object",
								"properties": {
									"0": {
										"type": "object",
										"properties": {
											"spells": {
												"type": "array",
												"uniqueItems": true,
												"items": {
													"type": "string"
												}
											}
										},
										"required": [
											"spells"
										],
										"additionalProperties": false
									},
									"1": {
										"$ref": "#/definitions/level1to9"
									},
									"2": {
										"$ref": "#/definitions/level1to9"
									},
									"3": {
										"$ref": "#/definitions/level1to9"
									},
									"4": {
										"$ref": "#/definitions/level1to9"
									},
									"5": {
										"$ref": "#/definitions/level1to9"
									},
									"6": {
										"$ref": "#/definitions/level1to9"
									},
									"7": {
										"$ref": "#/definitions/level1to9"
									},
									"8": {
										"$ref": "#/definitions/level1to9"
									},
									"9": {
										"$ref": "#/definitions/level1to9"
									}
								},
								"additionalProperties": false
							},
							"hidden": {
								"description": "Allows the above properties to be specified, but not rendered. Useful if e.g. a creature can only cast one spell, and this is rendered in the header line.",
								"type": "array",
								"items": {
									"type": "string",
									"enum": [
										"constant",
										"will",
										"rest",
										"daily",
										"weekly",
										"spells"
									]
								}
							},
							"footerEntries": {
								"type": "array",
								"items": {
									"$ref": "#/definitions/entry"
								}
							},
							"ability": {
								"type": "string",
								"enum": [
									"str",
									"dex",
									"con",
									"int",
									"wis",
									"cha"
								]
							}
						},
						"required": [
							"name"
						],
						"additionalProperties": false
					}
				},
				"trait": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"entries": {
								"type": "array",
								"items": {
									"$ref": "#/definitions/entry"
								}
							},
							"type": {
								"type": "string",
								"enum": [
									"entries",
									"inset"
								]
							}
						},
						"required": [
							"name",
							"entries"
						],
						"additionalProperties": false
					}
				},
				"action": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"entries": {
								"type": "array",
								"items": {
									"$ref": "#/definitions/entry"
								}
							}
						},
						"required": [
							"name",
							"entries"
						],
						"additionalProperties": false
					}
				},
				"reaction": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"entries": {
								"type": "array",
								"items": {
									"$ref": "#/definitions/entry"
								}
							}
						},
						"required": [
							"name",
							"entries"
						],
						"additionalProperties": false
					}
				},
				"legendaryGroup": {
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"source": {
							"type": "string"
						}
					}
				},
				"legendaryActions": {
					"type": "number"
				},
				"legendaryHeader": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/entry"
					}
				},
				"legendary": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"entries": {
								"type": "array",
								"items": {
									"$ref": "#/definitions/entry"
								}
							}
						},
						"required": [
							"entries"
						],
						"additionalProperties": false
					}
				},
				"variant": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/entry"
					}
				},
				"page": {
					"type": "integer"
				},
				"familiar": {
					"type": "boolean"
				},
				"additionalSources": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"source": {
								"type": "string"
							},
							"page": {
								"type": "integer"
							}
						},
						"required": [
							"source",
							"page"
						],
						"additionalProperties": false
					}
				},
				"tokenUrl": {
					"type": "string"
				},
				"fluff": {
					"description": "This is intended to be used for Homebrew only - site data should include a fluff file per source",
					"type": "object",
					"properties": {
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/entry"
							}
						},
						"images": {
							"type": "array",
							"items": {
								"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/entry.json#/definitions/entryImage"
							}
						}
					}
				},
				"isNamedCreature": {
					"type": "boolean"
				},
				"isNpc": {
					"description": "Used to flag quest-specific NPCs",
					"type": "boolean"
				},
				"environment": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"underwater",
							"coastal",
							"mountain",
							"grassland",
							"hill",
							"arctic",
							"urban",
							"forest",
							"swamp",
							"underdark",
							"desert"
						]
					}
				},
				"soundClip": {
					"type": "string"
				},
				"dragonCastingColor": {
					"type": "string",
					"enum": [
						"B",
						"U",
						"G",
						"R",
						"W",
						"A",
						"Z",
						"C",
						"O",
						"S"
					]
				},
				"traitTags": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"Aggressive",
							"Ambusher",
							"Amorphous",
							"Amphibious",
							"Antimagic Susceptibility",
							"Brute",
							"Charge",
							"Damage Absorption",
							"Death Burst",
							"Devil's Sight",
							"False Appearance",
							"Fey Ancestry",
							"Flyby",
							"Hold Breath",
							"Illumination",
							"Immutable Form",
							"Incorporeal Movement",
							"Keen Senses",
							"Legendary Resistances",
							"Light Sensitivity",
							"Magic Resistance",
							"Magic Weapons",
							"Pack Tactics",
							"Pounce",
							"Rampage",
							"Reckless",
							"Regeneration",
							"Rejuvenation",
							"Shapechanger",
							"Siege Monster",
							"Sneak Attack",
							"Spider Climb",
							"Sunlight Sensitivity",
							"Turn Immunity",
							"Turn Resistance",
							"Undead Fortitude",
							"Water Breathing",
							"Web Sense",
							"Web Walker"
						]
					}
				},
				"actionTags": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"Frightful Presence",
							"Multiattack",
							"Parry",
							"Swallow",
							"Teleport",
							"Tentacles"
						]
					}
				},
				"languageTags": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"AB",
							"AQ",
							"AU",
							"C",
							"CE",
							"D",
							"DR",
							"DS",
							"DU",
							"E",
							"G",
							"GI",
							"GO",
							"GTH",
							"H",
							"I",
							"IG",
							"O",
							"OTH",
							"P",
							"S",
							"T",
							"TC",
							"TP",
							"U",
							"X",
							"XX"
						]
					}
				},
				"senseTags": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"B",
							"D",
							"SD",
							"T",
							"U"
						]
					}
				},
				"footer": {
					"description": "Intended for homebrew use only.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/entry"
					}
				}
			}
		}
	},
	"properties": {
		"_meta": {
			"description": "Metadata for the included data arrays",
			"type": "object",
			"properties": {
				"sources": {
					"type": "array",
					"items": {
						"type": "object",
						"description": "A set of properties describing a \"source.\" A source could be, for example, a homebrew PDF, book, or blog post.",
						"properties": {
							"json": {
								"type": "string",
								"description": "An identifying string, as seen in the JSON in \"source\" fields."
							},
							"abbreviation": {
								"type": "string",
								"description": "Abbreviated form of the source, to display on the site."
							},
							"color": {
								"type": "string",
								"description": "HTML hex color code this source should use when displayed in lists, e.g. 'ff00ff'"
							},
							"full": {
								"type": "string",
								"description": "Full title of the source, to display on the site."
							},
							"authors": {
								"type": "array",
								"description": "A list of authors who created the homebrew source.",
								"items": {
									"type": "string",
									"description": "Author name."
								}
							},
							"convertedBy": {
								"type": "array",
								"description": "An optional list of people who contributed to converting the source to 5etools format.",
								"items": {
									"type": "string",
									"description": "Contributor name."
								}
							},
							"dateReleased": {
								"type": "string",
								"format": "date",
								"description": "The release date of the source, e.g. \"2000-01-31\". Dates myst be specified in precisely this format, with two digits given for both month and day."
							},
							"version": {
								"type": "string",
								"description": "The source version, e.g. \"1.2.3\"."
							},
							"url": {
								"type": "string",
								"description": "A direct link to the source, if available in web form or on a store."
							},
							"targetSchema": {
								"type": "string",
								"description": "The target schema version in 5etools, e.g. \"1.2.3\"."
							}
						},
						"required": ["json", "abbreviation", "full", "version"]
					}
				},
				"skill": {
					"type": "object",
					"description": "Object keys are Skill names, which can referenced using {@skill <key>} (case sensitive)",
					"patternProperties": {
						".*": {
							"type": "string"
						}
					}
				},
				"senses": {
					"type": "object",
					"description": "Object keys are Sense names, which can referenced using {@sense <key>} (case insensitive)",
					"patternProperties": {
						".*": {
							"type": "string"
						}
					}
				},
				"spellSchools": {
					"type": "object",
					"description": "Object names are spell school abbreviations (e.g. `\"X\"`); values should be objects with `\"full\"`` (used in the main entry, e.g. \"Evocation\") and `\"short\"` (used in the list view, e.g. `\"Evoc.\"`) key/values.",
					"patternProperties": {
						".*": {
							"type": "object",
							"properties": {
								"full": {
									"type": "string"
								},
								"short": {
									"type": "string"
								},
								"color": {
									"type": "string",
									"description": "HTML hex color code this source should use when displayed in lists, e.g. 'ff00ff'"
								}
							},
							"required": ["full", "short"]
						}
					}
				},
				"spellDistanceUnits": {
					"type": "object",
					"description": "Object names are spell distance units (e.g. `\"hectares\"`); values should be objects with optional `\"singular\"`` (singular form of the unit, e.g. \"foot\" for the singular of \"feet\"--if unspecified, a trailing \"s\" is removed from the plural version, if it exists, and the result is used as the singular form) and `\"feetPerUnit\"` (e.g. for a \"yards\" custom unit, this would be `3`, as there are three feet in a yard) key/values.",
					"patternProperties": {
						".*": {
							"type": "object",
							"properties": {
								"feetPerUnit": {
									"type": "number"
								},
								"singular": {
									"type": "string"
								}
							},
							"required": ["feetPerUnit"]
						}
					}
				},
				"optionalFeatureTypes": {
					"type": "object",
					"description": "Object names are optional feature \"type\" shorthands (e.g. \"EI\" for \"Eldritch Invocation\" which will be displayed in the list view as a sortable column",
					"patternProperties": {
						".*": {
							"type": "string"
						}
					}
				},
				"psionicTypes": {
					"type": "object",
					"description": "Object names are psionic type abbreviations (e.g. `\"X\"`); values should be objects with `\"full\"`` (used in the main entry, e.g. \"Greater Discipline\") and `\"short\"` (used in the list view, e.g. `\"G. Discipline\"`) key/values.",
					"patternProperties": {
						".*": {
							"type": "object",
							"properties": {
								"full": {
									"type": "string"
								},
								"short": {
									"type": "string"
								},
								"hasOrder": {
									"description": "If this type has a psionic order.",
									"type": "boolean"
								},
								"isAltDisplay": {
									"description": "If this type should display its psionic type/order with the format \"Greater Discipline (Awakened)\" instead of the standard \"Awakened Greater Discipline\"",
									"type": "boolean"
								}
							},
							"required": ["full", "short"]
						}
					}
				},
				"dateAdded": {
					"type": "integer",
					"description": "The epoch timestamp (in seconds) when the homebrew was added to the repository. Not guaranteed to be anywhere near accurate."
				},
				"dateLastModified": {
					"type": "integer",
					"description": "The epoch timestamp (in seconds) when the homebrew was last modified. Not guaranteed to be anywhere near accurate."
				},
				"currencyConversions": {
					"type": "object",
					"description": "Keys should be uniquely-named value conversion objects, and can be referenced from item entities as \"currencyConversion\": \"<MyKey>\". The currency conversion info will then be used when rendering the value of the item.",
					"patternProperties": {
						".*": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"coin": {
										"type": "string",
										"description": "Coin abbreviation, e.g. \"gp\""
									},
									"mult": {
										"type": "number",
										"description": "A multiplier for converting copper to this currency, e.g. \"0.01\" for standard gold pieces"
									},
									"isFallback": {
										"type": "boolean",
										"description": "If true, this currency will be used as a fallback when the copper value of the item is a fractional value (e.g. a single ball bearing is worth 0.1 cp; marking gold as the fallback currency would have this be converted to gold)."
									}
								},
								"required": ["coin", "mult"]
							}
						}
					}
				},
				"dependencies": {
					"description": "(Currently unused.)",
					"type": "object",
					"properties": {
						"monster": {
							"type": "array",
							"items": {"type": "string"}
						}
					}
				},
				"unlisted": {
					"description": "If this homebrew file should be ignored/hidden by any indexer.",
					"type": "boolean"
				}
			},
			"required": ["sources"]
		},

		"makebrewCreatureTrait": {
			"description": "Additional trait templates which can be used in the homebrew builder.",
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"source": {
						"type": "string"
					},
					"entries": {
						"$ref": "https://raw.githubusercontent.com/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/entry.json"
					}
				},
				"required": [
					"name",
					"source",
					"entries"
				]
			}
		},

		"adventure": {
			"type": "array",
			"items": {
				"allOf": [
					{
						"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/adventures.json#/properties/adventure/items"
					},
					{
						"$ref": "#/definitions/bookSource"
					}
				]
			}
		},
		"adventureData": {
			"type": "array",
			"items": {
				"allOf": [
					{
						"$ref": "#/definitions/bookSource"
					},
					{
						"properties": {
							"data": {
								"type": "array",
								"items": {
									"$ref": "#/definitions/entry"
								}
							}
						}
					}
				]
			}
		},
		"book": {
			"type": "array",
			"items": {
				"allOf": [
					{
						"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/adventures.json#/properties/adventure/items"
					},
					{
						"$ref": "#/definitions/bookSource"
					}
				]
			}
		},
		"bookData": {
			"type": "array",
			"items": {
				"allOf": [
					{
						"$ref": "#/definitions/bookSource"
					},
					{
						"properties": {
							"data": {
								"type": "array",
								"items": {
									"$ref": "#/definitions/entry"
								}
							}
						}
					}
				]
			}
		},
		"class": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/class/class.json#/properties/class"
		},
		"subclass": {
			"type": "array",
			"items": {
				"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/class/class.json#/definitions/subclass"
			}
		},
		"spell": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/spells/spells.json#/properties/spell"
		},
		"roll20Spell": {
			"description": "Based on the Roll20 JSON data",
			"type": "array",
			"items": {
				"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/spells/roll20.json#/definitions/spellMeta"
			}
		},
		"foundrySpell": {
			"description": "Based on the Roll20 JSON data",
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"name": {
						"description": "Used to link spells in the homebrew to this extra Foundry data",
						"type": "string"
					},
					"source": {
						"description": "Used to link spells in the homebrew to this extra Foundry data",
						"type": "string"
					},
					"data": {
						"description": "Foundry data",
						"properties": {
							"target.value": {"type": "integer"},
							"target.units": {"type": "string"},
							"target.type": {
								"description": "From Foundry's `CONFIG.DND5E.targetTypes`",
								"type": "string",
								"enum": [
									"none",
									"self",
									"creature",
									"ally",
									"enemy",
									"object",
									"space",
									"radius",
									"sphere",
									"cylinder",
									"cone",
									"square",
									"cube",
									"line",
									"wall"
								]
							}
						}
					}
				},
				"required": ["name", "source"],
				"additionalProperties": false
			}
		},
		"item": {
			"type": "array",
			"items": {
				"allOf": [
					{
						"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/items.json#/properties/item/items"
					},
					{
						"properties": {
							"fluff": {
								"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/fluff-items.json#/properties/item/items"
							}
						}
					}
				]
			}
		},
		"itemGroup": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/items.json#properties/itemGroup"
		},
		"basicitem": {
			"description": "Not supported",
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/basicitems.json#properties/basicitem"
		},
		"itemProperty": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/basicitems.json#properties/itemProperty"
		},
		"itemType": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/basicitems.json#properties/itemType"
		},
		"variant": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/magicvariants.json#properties/variant"
		},
		"background": {
			"type": "array",
			"items": {
				"allOf": [
					{
						"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/backgrounds.json#/properties/background/items"
					},
					{
						"properties": {
							"fluff": {
								"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/fluff-backgrounds.json#/properties/background/items"
							}
						}
					}
				]
			}
		},
		"condition": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/conditionsdiseases.json#/properties/condition"
		},
		"disease": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/conditionsdiseases.json#/properties/disease"
		},
		"deity": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/deities.json#/properties/deity"
		},
		"encounter": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/encounters.json#/properties/encounter"
		},
		"feat": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/feats.json#/properties/feat"
		},
		"name": {
			"description": "Not supported in homebrew",
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/names.json#/properties/name"
		},
		"object": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/objects.json#/properties/object"
		},
		"psionic": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/psionics.json#/properties/psionic"
		},
		"race": {
			"type": "array",
			"items": {
				"allOf": [
					{
						"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/races.json#/properties/race/items"
					},
					{
						"properties": {
							"fluff": {
								"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/fluff-races.json#/properties/race/items"
							}
						}
					}
				]
			}
		},
		"reward": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/rewards.json#/properties/reward"
		},
		"ship": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/ships.json#/properties/ship"
		},
		"table": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/tables.json#/properties/table"
		},
		"trap": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/trapshazards.json#/properties/trap"
		},
		"hazard": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/trapshazards.json#/properties/hazard"
		},
		"optionalfeature": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/optionalfeatures.json#properties/optionalfeature"
		},
		"variantrule": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/variantrules.json#properties/variantrule"
		},
		"legendaryGroup": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/bestiary/meta.json#/properties/legendaryGroup"
		},
		"language": {
			"$ref": "http://gitcdn.link/repo/TheGiddyLimit/TheGiddyLimit.github.io/master/test/schema/bestiary/meta.json#/properties/language"
		},
		"monster": {
			"type": "array",
			"items": {
				"type": "object",
				"allOf": [
					{
						"$ref": "#/definitions/creatureData"
					}
				]
			}
		}
	}
}
